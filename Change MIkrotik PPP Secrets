#!/usr/bin/env python
"""
@author: Egi Firmani
@Special Thanks for : Arrosid, Edi Mulyana, Wahyu wayuyu
For teaching how to code...
"""

# Import the modules needed to run the script.
import os
import sys
import time
from getpass import getpass

import paramiko

# Main definition - constants
menu_actions = {}

ip = "xxx.xxx.xxx.xxx" # Masukkan IP Mikrotik nya
port = 22 # Masukkan Port SSH


# =======================
#     MENUS FUNCTIONS
# =======================

#Store Mikrotik Output to Constructor
class Vpn(object):
    """docstring for Vpn"""
    username = ""
    service = ""
    password = ""
    profile = ""
    ip = ""

    def __init__(self, username,service , password, profile, ip):
        self.username = username
        self.service = service
        self.password = password
        self.profile = profile
        self.ip = ip

# Function For Clear Screen
def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

#Function Login To Mikrotik
def login():
    global ssh_client
    print "Tekan 'Ctrl+c' kemudian tekan 'Enter' untuk keluar dari program!"
    try:
        username = ""
        password = ""
        while len(username.strip()) == 0:
            username = raw_input("Mikrotik Username: ") # Input Mikrotik Username
        while len(password.strip()) == 0: # Input Mikrotik Password
            password = getpass("Mikrotik Password: ")
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh_client.connect(hostname=ip, username=username, password=password, port=port, look_for_keys=False)

        ssh_client.invoke_shell()
        main_menu()
    except KeyboardInterrupt:
        print "bye!"
    except Exception as e:
        print "Error: " + str(e)

# Get Variable From Mikrotik Output
def output():
    stdin, stdout, stderr = ssh_client.exec_command("ppp secret print \n")
    time.sleep(1)

    list_vpn = []
    i = 0
    for x in stdout.readlines():
        if (x.strip() != '' and i>1):
            vpn = Vpn(x.split()[1], x.split()[2], x.split()[3], x.split()[4], x.split()[5])
            list_vpn.append(vpn)
        i+=1
    return list_vpn

# Main menu
def main_menu():
    clear_screen()

    print "Selamat datang,\n"
    print  "+++++++++++++++++++++++++++++++++++++++++++++\n" + \
           "+ Status:\n" + \
           "+ ------ \n" + \
           "+ Dafta User Aktif VPN: " + "\n" + \
            "+++++++++++++++++++++++++++++++++++++++++++++\n\n"
    list_pengguna = output()

    i = 1
    for x in list_pengguna:
        print i, ". ", x.username
        i+=1

    print "\n"
    print "Silakan pilih user yang akan di ganti password nya: (Bukan Nomor!!) "
    print "\n0. Quit"
    username_input = raw_input("\n>>  ")
    exec_menu(username_input, list_pengguna)

    return


# Execute menu
def exec_menu(username_input, list_pengguna):
    clear_screen()
    try:

        if username_input == "0":
            return exit()
        else:
            flag = 0
            for x in list_pengguna:
                if (username_input.lower() == x.username.lower()):
                    flag = 1
                    return menu1(x)      

            if flag == 0:
                clear_screen()
                print "User Tidak Terdaftar Di Dalam Database VPN, Silahkan dicoba lagi..."
                time.sleep(3)
                main_menu()  
    except KeyError:
        print "Pilihan menu salah, silakan dicoba lagi.\n"
        time.sleep(3)
        menu_actions['main_menu']()
    return

# Menu 1 - 
def menu1(hasil_pencarian):
    
    print "Masukkan Password Existing Untuk Username " + hasil_pencarian.username.upper() + ": "
    print "0. Quit"
    print "9. Main Menu"
    password = getpass("\n>>  ")

    if password == hasil_pencarian.password:
        clear_screen()
        print "Masukkan Password Baru: "
        pasword_check1 = getpass("\n>>  ")
        clear_screen()
        print "Konfirmasi Password: "
        pasword_check2 = getpass("\n>>  ")
        if pasword_check1 == pasword_check2:
                ssh_client.exec_command("ppp secret remove" + " " + hasil_pencarian.username + "\n")
                ssh_client.exec_command("ppp secret add name=" + hasil_pencarian.username + " service=" + hasil_pencarian.service + " password=" + pasword_check1 + " profile=" + hasil_pencarian.profile + " remote-address=" + hasil_pencarian.ip + " local-address=172.16.1.1")
                print ("Password atas nama " + hasil_pencarian.username + " berhasil dirubah...")
                print "Kembali ke Menu Utama..."
                time.sleep(3)
                main_menu()
        else:
            clear_screen()
            print "Konfirmasi Password tidak cocok, Silahkan Coba Lagi "
            print "\n"
            return menu1(hasil_pencarian)
    elif password.lower() == "0":
        exit()
    elif password.lower() == "9":
        main_menu()
    else:
        clear_screen()
        print "Password Existing Salah, Silahkan Coba Lagi "
        print "\n"
        return menu1(hasil_pencarian)
    return

# Back to main menu
def back():
    menu_actions['main_menu']()


# Exit program
def exit():
    ssh_client.close()
    sys.exit()

# Launch Program
if __name__ == "__main__":
    # Launch main menu
    login()
