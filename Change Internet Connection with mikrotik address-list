# Import the modules needed to run the script.
import os
import sys
import time
from getpass import getpass

import paramiko

# Main definition - constants
menu_actions = {}

ip = "192.168.65.65"
port = 25900



# =======================
#     MENUS FUNCTIONS
# =======================

def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')


def login():
    global ssh_client
    print "Tekan 'Ctrl+c' kemudian tekan 'Enter' untuk keluar dari program!"
    try:
        username = ""
        password = ""
        while len(username.strip()) == 0:
            username = raw_input("Username: ")
        while len(password.strip()) == 0:
            password = getpass()
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh_client.connect(hostname=ip, username=username, password=password, port=port, look_for_keys=False)

        ssh_client.invoke_shell()
        main_menu()
    except KeyboardInterrupt:
        print "bye!"
    except Exception as e:
        print "Error: " + str(e)


def status():
    stdin, stdout, stderr = ssh_client.exec_command("ip firewall address-list print where comment=\"LANNebula\" \n")
    koneksi_lan = stdout.readlines()[3].split()[0]
    stdin, stdout, stderr = ssh_client.exec_command("ip firewall address-list print where comment=\"WIFINebula\" \n")
    koneksi_wifi = stdout.readlines()[3].split()[0]

    return "+++++++++++++++++++++++++++++++++++++++++++++\n" + \
           "+ Status:\n" + \
           "+ ------ \n" + \
           "+ Koneksi LAN  saat ini via: " + koneksi_lan + "\n" + \
           "+ Koneksi WIFI saat ini via: " + koneksi_wifi + "\n" \
                                                            "+++++++++++++++++++++++++++++++++++++++++++++\n\n"


# Main menu
def main_menu():
    clear_screen()

    print "Selamat datang,\n"

    print status()

    print "Silakan pilih action yang akan dilakukan: "
    print "1. Merubah Koneksi Jaringan LAN"
    print "2. Merubah Koneksi Jaringan WIFI"
    print "\n0. Quit"
    choice = raw_input("\n>>  ")
    exec_menu(choice)

    return


# Execute menu
def exec_menu(choice):
    clear_screen()
    ch = choice.lower()
    if ch == '':
        menu_actions['main_menu']()
    else:
        try:
            menu_actions[ch]()
        except KeyError:
            print "Pilihan menu salah, silakan dicoba lagi.\n"
            time.sleep(3)
            menu_actions['main_menu']()
    return


def exec_menu1(choice):
    clear_screen()
    ch = choice.lower()
    if ch == '':
        menu_actions['menu1']()
    else:
        try:
            if ch == '1' or ch == '2':
                if menu_actions_1[ch]() is None:
                    print "Perubahan koneksi telah berhasil dilakukan."
                    time.sleep(3)
                else:
                    print "Proses gagal, silakan dicoba lagi.\n"
                    time.sleep(3)
                menu_actions['main_menu']()
            else:
                menu_actions_1[ch]()
        except KeyError:
            print "Pilihan menu salah, silakan dicoba lagi.\n"
            time.sleep(3)
            menu_actions['main_menu']()
    return


def exec_menu2(choice):
    clear_screen()
    ch = choice.lower()
    if ch == '':
        menu_actions['menu2']()
    else:
        try:
            if ch == '1' or ch == '2':
                if menu_actions_2[ch]() is None:
                    print "Perubahan koneksi telah berhasil dilakukan."
                    time.sleep(3)
                else:
                    print "Proses gagal, silakan dicoba lagi.\n"
                    time.sleep(3)
                menu_actions['main_menu']()
            else:
                menu_actions_2[ch]()
        except KeyError:
            print "Pilihan menu salah, silakan dicoba lagi.\n"
            time.sleep(3)
            menu_actions['main_menu']()
    return


# Menu 1
def menu1():
    print status()
    print "Merubah Koneksi Jaringan LAN"
    print "1. Alihkan ke Biznet"
    print "2. Alihkan ke Astinet"
    print "9. Back"
    print "0. Quit"
    choice = raw_input("\n>>  ")
    exec_menu1(choice)
    return


# Menu 2
def menu2():
    print status()
    print "Merubah Koneksi Jaringan WIFI"
    print "1. Alihkan ke Biznet"
    print "2. Alihkan ke Astinet"
    print "9. Back"
    print "0. Quit"
    choice = raw_input("\n>>  ")
    exec_menu2(choice)
    return

# mikrotik function
def l2biznet():
    try:
        ssh_client.exec_command("/ip firewall address-list remove [find address=\"192.168.68.0/24\"] \n")
        ssh_client.exec_command("/ip firewall address-list add address=192.168.68.0/24 list=Biznet_Dedicated comment=LANNebula \n")
    except:
        return False
    return

def l2astinet():
    try:
        ssh_client.exec_command("/ip firewall address-list remove [find address=\"192.168.68.0/24\"] \n")
        ssh_client.exec_command("/ip firewall address-list add address=192.168.68.0/24 list=Astinet_Networks comment=LANNebula \n")
    except:
        return False
    return

def w2biznet():
    try:
        ssh_client.exec_command("/ip firewall address-list remove [find address=\"192.168.67.0/24\"] \n")
        ssh_client.exec_command("/ip firewall address-list add address=192.168.67.0/24 list=Biznet_Dedicated comment=WIFINebula \n")
    except:
        return False
    return

def w2astinet():
    try:
        ssh_client.exec_command("/ip firewall address-list remove [find address=\"192.168.67.0/24\"] \n")
        ssh_client.exec_command("/ip firewall address-list add address=192.168.67.0/24 list=Astinet_Networks comment=WIFINebula \n")
    except:
        return False
    return

# Back to main menu
def back():
    menu_actions['main_menu']()


# Exit program
def exit():
    ssh_client.close()
    sys.exit()


# =======================
#    MENUS DEFINITIONS
# =======================

# Menu definition
menu_actions = {
    'main_menu': main_menu,
    '1': menu1,
    '2': menu2,
    '9': back,
    '0': exit,
}

menu_actions_1 = {
    '1': l2biznet,
    '2': l2astinet,
    '9': back,
    '0': exit,
}


menu_actions_2 = {
    '1': w2biznet,
    '2': w2astinet,
    '9': back,
    '0': exit,
}

# =======================
#      MAIN PROGRAM
# =======================

# Main Program
if __name__ == "__main__":
    # Launch main menu
    login()
